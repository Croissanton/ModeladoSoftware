model P1

class Empresa
attributes
ValorMinPedido : Real
end

class Persona
attributes
Nombre : String
DNI : String
VIP : Integer
end

class Empleado < Persona
attributes
Salario : Real
numTrabajos : Integer
end

class Director < Empleado
end

class Gerente < Empleado
end

class Trabajador < Empleado
end

class Cliente < Persona
attributes
totalGastadoPedidos : Real
end

class Pedido
attributes
NumArticulos : Integer
Precio : Real
end

class Producto
attributes
Tipo : String
Codigo : String
Precio : Real
end

class Almacen
end

class Articulo < Producto
attributes
Cantidad : Integer
end

association Pide between
Cliente [1] role Comprador
Pedido [*] role Encargo
end

association Dirige between
Director [1] role Director
Empresa [0..3] role Compania1
end

association Gerenta between
Gerente [1] role Gerente
Empresa [0..3] role Compania2
end

association TrabajaEn between
Trabajador [1..*] role Trabajador
Empresa [0..3] role Compania3
end

association Tiene between
Empresa [*] role Empresa
Almacen [*] role Almacen
end

aggregation AlmacenProducto between
Almacen [*] role Almacen
Producto [*] role Producto
end

aggregation PedidoArticulo between
Pedido [*] role Pedido
Articulo [1..*] role Articulo
end

association TieneProductos between
Cliente [*] role Cliente
Producto [0..10] role Producto
end

constraints
context Cliente inv esVIP:
self.VIP = self.totalGastadoPedidos > 1000

context Empresa inv gerenteSalaryHigherThanWorker: 
Trabajador.allInstances()->forAll(w | w.Salario < self.Gerente.Salario)

context Empresa inv directorSalaryHigherThanManager:
self.Director.Salario > self.Gerente.Salario

context Empresa inv directorDifferentFromGerente:
self.Director.DNI <> self.Gerente.DNI
  
context Empresa inv directorDifferentFromTrabajador:
Trabajador.allInstances()->forAll(w | w.DNI <> self.Director.DNI)
  
context Empresa inv gerentedifferentFromTrabajador:
Trabajador.allInstances()->forAll(w | w.DNI <> self.Gerente.DNI)
    
context Cliente inv VIPclients: 
self.VIP = true

context Empleado inv minNumTrabajos:
self.numTrabajos > 0

context Empleado inv maxNumTrabajos:
self.numTrabajos <= 3

context Empleado inv siempreVIP:
self.VIP = true